from sqlalchemy import *
from migrate import *
from migrate.changeset import *

from raggregate.guid_recipe import GUID

meta = MetaData()

# this ugly table generated by Submission.__table__ and manually made usable.
gen_table = Table('submissions', meta, Column('id', GUID(),  primary_key=True, nullable=False), Column('title', UnicodeText(),  nullable=False), Column('description', UnicodeText(), ), Column('points', Integer(), ), Column('comment_tally', Integer(), ), Column('category', GUID(), ), Column('url', UnicodeText(), ), Column('self_post', Boolean(), ), Column('added_on', DateTime(timezone=True),  default=ColumnDefault(func.now())), Column('added_by', GUID(), ForeignKey('users.id'),  nullable=False), Column('deleted', Boolean(),  default=ColumnDefault(False)), Column('invisible', Boolean(),  default=ColumnDefault(False)), Column('hot_window_score', Integer(), ), Column('hot_window_score_timestamp', DateTime(timezone=True), ), Column('downvote_tally', Integer(), ), Column('downvote_tally_timestamp', DateTime(timezone=True), ), Column('upvote_tally', Integer(), ), Column('upvote_tally_timestamp', DateTime(timezone=True), ), Column('total_vote_tally', Integer(), ), Column('total_vote_timestamp', DateTime(timezone=True), ),)

def upgrade(migrate_engine):
    meta.bind = migrate_engine
    for col in gen_table.c:
        # modify all DateTime columns to tz awareness
        if type(col.type) == DateTime:
            col.alter(type = DateTime(timezone=True))

def downgrade(migrate_engine):
    meta.bind = migrate_engine
    for col in gen_table.c:
        # modify all DateTime columns to tz naivety
        if type(col.type) == DateTime:
            col.alter(type = DateTime(timezone=False))

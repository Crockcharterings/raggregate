[app:raggregate]
use = egg:raggregate
reload_templates = true
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = true
default_locale_name = en
site.site_name = raggregate
sqlalchemy.url = sqlite:///%(here)s/raggregate.db
mako.directories = raggregate:templates/base
session.type = ext:memcached
session.url = 127.0.0.1:11211
session.data_dir = /dev/shm/sessions/data
session.lock_dir = /dev/shm/sessions/lock
session.key = raggregate
session.secret = CHANGEME
session.cookie_on_exception = true
cache.type = ext:memcached
cache.url = 127.0.0.1:11211
cache.expires = 3600
solr.address = http://localhost:8983/solr/
twitter.app_key = none
twitter.app_secret = none
facebook.app_key = none
facebook.app_secret = none
user.picture_upload_package = raggregate:static/user_imgs
user.picture_upload_directory = abs/path/to/picture_upload_package/referenced/above
section.picture_upload_package = raggregate:static/section_imgs
section.picture_upload_directory = abs/path/to/picture_upload_package/referenced/above
sort.default_order = new
sort.comment_default_order = top

# control automatic anonymous user account generation
# if this is on, every request to /post generates a new temporary user
# and this user can post, vote, comment, etc., and has the option to convert
# itself to a real user on the login page. this is used to lower the barrier
# to entry, but it's a serious potential abuse vector.
user.generate_anon_accounts = false
# @TODO: deprecate AnonAllow model, add anonymous permission control here instead

# all of these must be valid timedelta constructor parameters
# if you break them, you will be in a lot of trouble

# calculate average point assignment over this period of time
# total of all votes on stories in hot_point_window time / number of stories = average score
# This should probably be changed to use median instead of mean
sort.hot_point_window = hours = 6
sort.hot_eligible_age = hours = 6000
sort.hot_recalc_threshold = seconds = 1

#number of recent comments to list in "recent comments" box.
recent_comments.num = 10
recent_comments.enabled = true

atom.enabled = true

[pipeline:main]
pipeline =
    egg:WebError#evalerror
    tm
    raggregate

[filter:tm]
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, raggregate, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_raggregate]
level = DEBUG
handlers =
qualname = raggregate

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
